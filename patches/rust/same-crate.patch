Corrode translates one source file at a time, so it doesn't know whether
any of the type or external function declarations it sees belong to
other modules that will be placed in the same crate.

This patch deletes definitions that are redundant with other modules
that we're translating in the same crate.

Index: b/src/stack.rs
===================================================================
--- a/src/stack.rs
+++ b/src/stack.rs
@@ -1,56 +1,8 @@
 extern {
     fn Xstrdup(str : *const u8) -> *mut u8;
-    fn addnode(list : *mut hashlist, p : *mut hashnode) -> i32;
-    fn addnode_at_front(
-        list : *mut hashlist, p : *mut hashnode
-    ) -> i32;
-    fn delnode(p : *mut hashnode);
-    fn getlist() -> *mut hashlist;
-    fn getnode() -> *mut hashnode;
 }
 
-#[derive(Clone, Copy)]
-#[repr(i32)]
-pub enum ntype {
-    NT_UNKNOWN,
-    HEADER,
-    ENTRIES,
-    FILES,
-    LIST,
-    RCSNODE,
-    RCSVERS,
-    DIRS,
-    UPDATE,
-    LOCK,
-    NDBMNODE,
-    FILEATTR,
-    VARIABLE,
-    RCSFIELD,
-    RCSCMPFLD,
-    RCSSTRING,
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashnode {
-    pub type_ : ntype,
-    pub next : *mut hashnode,
-    pub prev : *mut hashnode,
-    pub hashnext : *mut hashnode,
-    pub hashprev : *mut hashnode,
-    pub key : *mut u8,
-    pub data : *mut ::std::os::raw::c_void,
-    pub len : usize,
-    pub delproc : unsafe extern fn(*mut hashnode),
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashlist {
-    pub list : *mut hashnode,
-    pub hasharray : [*mut hashnode; 151],
-    pub next : *mut hashlist,
-}
+use hash::{hashnode, hashlist, getlist, getnode, delnode, addnode, addnode_at_front};
 
 unsafe extern fn do_push(
     mut stack : *mut hashlist,
Index: b/src/checkin.rs
===================================================================
--- a/src/checkin.rs
+++ b/src/checkin.rs
@@ -32,14 +32,6 @@ extern {
         date : *const u8,
         ts_conflict : *const u8
     );
-    fn Version_TS(
-        finfo : *mut file_info,
-        options : *const u8,
-        tag : *const u8,
-        date : *const u8,
-        force_tag_match : i32,
-        set_time : i32
-    ) -> *mut vers_ts;
     fn __assert_fail(
         __assertion : *const u8,
         __file : *const u8,
@@ -73,7 +65,6 @@ extern {
         filename : *const u8, attrname : *const u8
     ) -> *mut u8;
     fn free(__ptr : *mut ::std::os::raw::c_void);
-    fn freevers_ts(versp : *mut *mut vers_ts);
     fn history_write(
         type_ : i32,
         update_dir : *const u8,
@@ -107,121 +98,10 @@ extern {
     fn xchmod(fname : *const u8, writable : bool);
 }
 
-enum buffer {
-}
-
-#[derive(Clone, Copy)]
-#[repr(i32)]
-pub enum ntype {
-    NT_UNKNOWN,
-    HEADER,
-    ENTRIES,
-    FILES,
-    LIST,
-    RCSNODE,
-    RCSVERS,
-    DIRS,
-    UPDATE,
-    LOCK,
-    NDBMNODE,
-    FILEATTR,
-    VARIABLE,
-    RCSFIELD,
-    RCSCMPFLD,
-    RCSSTRING,
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashnode {
-    pub type_ : ntype,
-    pub next : *mut hashnode,
-    pub prev : *mut hashnode,
-    pub hashnext : *mut hashnode,
-    pub hashprev : *mut hashnode,
-    pub key : *mut u8,
-    pub data : *mut ::std::os::raw::c_void,
-    pub len : usize,
-    pub delproc : unsafe extern fn(*mut hashnode),
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashlist {
-    pub list : *mut hashnode,
-    pub hasharray : [*mut hashnode; 151],
-    pub next : *mut hashlist,
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct rcsnode {
-    pub refcount : i32,
-    pub flags : i32,
-    pub path : *mut u8,
-    pub print_path : *mut u8,
-    pub head : *mut u8,
-    pub branch : *mut u8,
-    pub symbols_data : *mut u8,
-    pub expand : *mut u8,
-    pub symbols : *mut hashlist,
-    pub versions : *mut hashlist,
-    pub access : *mut u8,
-    pub locks_data : *mut u8,
-    pub locks : *mut hashlist,
-    pub strict_locks : i32,
-    pub comment : *mut u8,
-    pub desc : *mut u8,
-    pub delta_pos : isize,
-    pub other : *mut hashlist,
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct file_info {
-    pub file : *const u8,
-    pub update_dir : *const u8,
-    pub fullname : *const u8,
-    pub repository : *const u8,
-    pub entries : *mut hashlist,
-    pub rcs : *mut rcsnode,
-}
+use hash::hashlist;
+use vers_ts::{file_info, rcsnode, vers_ts, Version_TS, freevers_ts};
 
-#[derive(Clone, Copy)]
-#[repr(i32)]
-pub enum ent_type {
-    ENT_FILE,
-    ENT_SUBDIR,
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct entnode {
-    pub type_ : ent_type,
-    pub user : *mut u8,
-    pub version : *mut u8,
-    pub timestamp : *mut u8,
-    pub options : *mut u8,
-    pub tag : *mut u8,
-    pub date : *mut u8,
-    pub conflict : *mut u8,
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct vers_ts {
-    pub vn_user : *mut u8,
-    pub vn_rcs : *mut u8,
-    pub vn_tag : *mut u8,
-    pub ts_user : *mut u8,
-    pub ts_rcs : *mut u8,
-    pub options : *mut u8,
-    pub ts_conflict : *mut u8,
-    pub tag : *mut u8,
-    pub date : *mut u8,
-    pub nonbranch : i32,
-    pub entdata : *mut entnode,
-    pub srcfile : *mut rcsnode,
+enum buffer {
 }
 
 unsafe extern fn streq(
Index: b/src/vers_ts.rs
===================================================================
--- a/src/vers_ts.rs
+++ b/src/vers_ts.rs
@@ -25,9 +25,6 @@ extern {
     fn error(
         __status : i32, __errnum : i32, __format : *const u8, ...
     );
-    fn findnode_fn(
-        list : *mut hashlist, key : *const u8
-    ) -> *mut hashnode;
     fn free(__ptr : *mut ::std::os::raw::c_void);
     fn freercsnode(rnodep : *mut *mut rcsnode);
     fn gmtime(__timer : *const isize) -> *mut tm;
@@ -47,6 +44,8 @@ extern {
     fn xmalloc(s : usize) -> *mut ::std::os::raw::c_void;
 }
 
+use hash::{hashnode, hashlist, findnode_fn};
+
 #[derive(Clone, Copy)]
 #[repr(i32)]
 pub enum ent_type {
@@ -68,49 +67,6 @@ pub struct entnode {
 }
 
 #[derive(Clone, Copy)]
-#[repr(i32)]
-pub enum ntype {
-    NT_UNKNOWN,
-    HEADER,
-    ENTRIES,
-    FILES,
-    LIST,
-    RCSNODE,
-    RCSVERS,
-    DIRS,
-    UPDATE,
-    LOCK,
-    NDBMNODE,
-    FILEATTR,
-    VARIABLE,
-    RCSFIELD,
-    RCSCMPFLD,
-    RCSSTRING,
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashnode {
-    pub type_ : ntype,
-    pub next : *mut hashnode,
-    pub prev : *mut hashnode,
-    pub hashnext : *mut hashnode,
-    pub hashprev : *mut hashnode,
-    pub key : *mut u8,
-    pub data : *mut ::std::os::raw::c_void,
-    pub len : usize,
-    pub delproc : unsafe extern fn(*mut hashnode),
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashlist {
-    pub list : *mut hashnode,
-    pub hasharray : [*mut hashnode; 151],
-    pub next : *mut hashlist,
-}
-
-#[derive(Clone, Copy)]
 #[repr(C)]
 pub struct rcsnode {
     pub refcount : i32,
Index: b/src/fileattr.rs
===================================================================
--- a/src/fileattr.rs
+++ b/src/fileattr.rs
@@ -19,23 +19,17 @@ extern {
     );
     fn __errno_location() -> *mut i32;
     fn abs(__x : i32) -> i32;
-    fn addnode(list : *mut hashlist, p : *mut hashnode) -> i32;
     static mut current_parsed_root : *mut cvsroot_s;
     static mut cvs_cmd_name : *const u8;
     fn cvs_mkdir(
         name : *const u8, update_dir : *const u8, flags : u32
     ) -> bool;
     static mut cvsumask : u32;
-    fn dellist(listp : *mut *mut hashlist);
-    fn delnode(p : *mut hashnode);
     fn error(
         __status : i32, __errnum : i32, __format : *const u8, ...
     );
     fn fclose(__stream : *mut _IO_FILE) -> i32;
     fn ferror_unlocked(__stream : *mut _IO_FILE) -> i32;
-    fn findnode(
-        list : *mut hashlist, key : *const u8
-    ) -> *mut hashnode;
     fn fopen(
         __filename : *const u8, __modes : *const u8
     ) -> *mut _IO_FILE;
@@ -51,16 +45,12 @@ extern {
         __s : *const u8, __stream : *mut _IO_FILE
     ) -> i32;
     fn free(__ptr : *mut ::std::os::raw::c_void);
-    fn freenode(p : *mut hashnode);
     fn getline(
         __lineptr : *mut *mut u8,
         __n : *mut usize,
         __stream : *mut _IO_FILE
     ) -> isize;
-    fn getlist() -> *mut hashlist;
-    fn getnode() -> *mut hashnode;
     fn isdir(file : *const u8) -> bool;
-    fn list_isempty(list : *mut hashlist) -> i32;
     static mut noexec : i32;
     fn primary_root_inverse_translate(
         root_in : *const u8
@@ -81,64 +71,16 @@ extern {
     ) -> *mut u8;
     fn umask(__mask : u32) -> u32;
     fn unlink_file(f : *const u8) -> i32;
-    fn walklist(
-        list : *mut hashlist,
-        arg2
-        :
-        unsafe extern fn(*mut hashnode, *mut ::std::os::raw::c_void) -> i32,
-        closure : *mut ::std::os::raw::c_void
-    ) -> i32;
     fn xmalloc(s : usize) -> *mut ::std::os::raw::c_void;
 }
 
+use hash::{ntype, hashnode, hashlist, addnode, dellist, delnode, findnode, freenode, getlist, getnode, list_isempty, walklist};
+
 enum _IO_FILE {
 }
 
 static mut fileattr_stored_repos : *mut u8 = 0 as (*mut u8);
 
-#[derive(Clone, Copy)]
-#[repr(i32)]
-pub enum ntype {
-    NT_UNKNOWN,
-    HEADER,
-    ENTRIES,
-    FILES,
-    LIST,
-    RCSNODE,
-    RCSVERS,
-    DIRS,
-    UPDATE,
-    LOCK,
-    NDBMNODE,
-    FILEATTR,
-    VARIABLE,
-    RCSFIELD,
-    RCSCMPFLD,
-    RCSSTRING,
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashnode {
-    pub type_ : ntype,
-    pub next : *mut hashnode,
-    pub prev : *mut hashnode,
-    pub hashnext : *mut hashnode,
-    pub hashprev : *mut hashnode,
-    pub key : *mut u8,
-    pub data : *mut ::std::os::raw::c_void,
-    pub len : usize,
-    pub delproc : unsafe extern fn(*mut hashnode),
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashlist {
-    pub list : *mut hashnode,
-    pub hasharray : [*mut hashnode; 151],
-    pub next : *mut hashlist,
-}
-
 static mut attrlist : *mut hashlist = 0 as (*mut hashlist);
 
 static mut fileattr_default_attrs : *mut u8 = 0 as (*mut u8);
Index: b/src/wrapper.rs
===================================================================
--- a/src/wrapper.rs
+++ b/src/wrapper.rs
@@ -52,6 +52,8 @@ extern {
     ) -> *mut ::std::os::raw::c_void;
 }
 
+use hash::hashlist;
+
 enum _IO_FILE {
 }
 
@@ -113,49 +115,6 @@ pub enum Enum4 {
 }
 
 #[derive(Clone, Copy)]
-#[repr(i32)]
-pub enum ntype {
-    NT_UNKNOWN,
-    HEADER,
-    ENTRIES,
-    FILES,
-    LIST,
-    RCSNODE,
-    RCSVERS,
-    DIRS,
-    UPDATE,
-    LOCK,
-    NDBMNODE,
-    FILEATTR,
-    VARIABLE,
-    RCSFIELD,
-    RCSCMPFLD,
-    RCSSTRING,
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashnode {
-    pub type_ : ntype,
-    pub next : *mut hashnode,
-    pub prev : *mut hashnode,
-    pub hashnext : *mut hashnode,
-    pub hashprev : *mut hashnode,
-    pub key : *mut u8,
-    pub data : *mut ::std::os::raw::c_void,
-    pub len : usize,
-    pub delproc : unsafe extern fn(*mut hashnode),
-}
-
-#[derive(Clone, Copy)]
-#[repr(C)]
-pub struct hashlist {
-    pub list : *mut hashnode,
-    pub hasharray : [*mut hashnode; 151],
-    pub next : *mut hashlist,
-}
-
-#[derive(Clone, Copy)]
 #[repr(i32)]
 pub enum Enum5 {
     VERIFY_DEFAULT = 0i32,
